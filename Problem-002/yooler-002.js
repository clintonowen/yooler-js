'use strict';

/**
 * ========== PROBLEM 2: Even Fibonacci Numbers ==========
 * Each new term in the Fibonacci sequence is generated by adding the previous
 * two terms. By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed
 * four million, find the sum of the even-valued terms.
*/

function InputException (message) {
  this.message = message;
  this.name = 'InputException';
}

function getFibTerms (upperLimit, first = 1, second = 2) {
  const next = first + second;
  if (next > upperLimit) {
    return [first, second];
  } else {
    return [first].concat(getFibTerms(upperLimit, second, next));
  }
}

function sumOfFibonacciEvens (upperLimit) {
  // Validate the inputs
  if (!upperLimit || upperLimit < 0 || !Number.isInteger(upperLimit)) {
    throw new InputException('Please enter a positive integer for the `upperLimit`.');
  }

  const fibTerms = getFibTerms(upperLimit);
  // console.log('fibTerms', fibTerms);

  const sum = fibTerms.reduce((sum, term) => {
    if (term % 2 === 0) {
      return sum + term;
    } else {
      return sum;
    }
  }, 0);

  // Return the sum
  return `The sum of the even-valued terms in the Fibonacci sequence whose values do not exceed ${upperLimit} is ${sum}.`;
}

/* ========== INVALID INPUTS ========== */
// console.log(sumOfFibonacciEvens());
// console.log(sumOfFibonacciEvens(-90));
// console.log(sumOfFibonacciEvens(90.33));
// console.log(sumOfFibonacciEvens('90'));

/* ========== TEST CASE ========== */
// console.log(sumOfFibonacciEvens(90)); // => 44

/* ========== SOLUTION ========== */
console.time();
console.log(sumOfFibonacciEvens(4000000)); // => 4613732
console.timeEnd();

module.exports = sumOfFibonacciEvens;
